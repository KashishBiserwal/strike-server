generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EMPLOYEE
  SUBADMIN
}

enum BookingType {
  Package
  Custom
}

enum BookingStatus {
  PENDING
  CANCELLED
  COMPLETED
}

model Employee {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  employeeId Int?     @unique
  phone      String?  @unique
  name       String
  password   String
  isSubadmin Boolean  @default(false)
  role       Role     @default(EMPLOYEE)
  storeId    Int?
  store      Store?   @relation(fields: [storeId], references: [id])
  accessTo   Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Store {
  id            Int        @id @default(autoincrement())
  name          String?
  address       String?
  storeLocation String?
  mapsLocation  String?
  phone         String?
  employees     Employee[]
  bookings      Booking[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Package {
  id          Int       @id @default(autoincrement())
  name        String
  price       Int
  overs       Int?
  description String?
  title       String?
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Booking {
  id            Int           @id @default(autoincrement())
  status        BookingStatus @default(PENDING)
  storeId       Int
  bookingType   BookingType
  overs         Int?
  price         Int?
  store         Store         @relation(fields: [storeId], references: [id])
  packageId     Int?
  package       Package?       @relation(fields: [packageId], references: [id])
  customerId    Int? 
  customer      Customer?     @relation(fields: [customerId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Customer {
  id        Int       @id @default(autoincrement())
  email     String?   @unique
  phone     String?   @unique
  name      String
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}